---
format: html
editor: visual
---

```{r, eval = F}
# This code chunk contains code to install all of the dependencies
# necessary to compile and run your report, using if-statements to
# reduce install time for unnecessary code.
# It should be set to eval = F by default, so you aren't installing
# software on someone's computer without their consent.

# This works for packages that are on CRAN
if (!"dplyr" %in% installed.packages()) {
  install.packages("dplyr")
}
if (!"remotes" %in% installed.packages()) {
  install.packages("remotes")
}

# This is how to do it for a package that's only on github
if (!"emo" %in% installed.packages()) {
  remotes::install_github("hadley/emo")
}  

```

```{r}
BabyNames <- read.csv("Popular_Baby_Names.csv")
#colnames(BabyNames)
#str(BabyNames)


sum(is.na(BabyNames)) # check missing values; no missing values

library(dplyr)
# distinct this dataset; remove the repeated rows based on X element 


BabyNames$Child.s.First.Name <- tolower(BabyNames$Child.s.First.Name)

# Using unique function to get 
babynames<- unique(BabyNames) # remove the repeated rows; 

# combine the ethnic groups b/c they have the same meaning
modified_data <- babynames %>% mutate(Ethnicity = recode(Ethnicity, "BLACK NON HISP" = "BLACK NON HISPANIC" ,
                                                      "ASIAN AND PACI" = "ASIAN AND PACIFIC ISLANDER",
                                                      "WHITE NON HISP" = "WHITE NON HISPANIC" )) 

# check the result; there are total 4 levels in the ethnic groups
#M_data1 <- modified_data %>% group_by(Ethnicity) %>% count()
#M_data2 <- modified_data %>% group_by(Ethnicity, Gender) %>% count()
```

## Introduction

### Description of the Data set

This dataset `BabyNames` consist of the popular baby names by sex and ethnic group from 2011 to 2019, and it was collected through civil birth registration. There is other information about how the data.citynewyork.us collected the data. But we think they may collect the data from online registration system. Each row represents **a** **popular baby** first name . There are 6 columns, `Year of Birth`, it is quantitative and indicates the year of the baby birth; `Year of Birth` includes year from 2011 to 2019; `Gender`, it is categorical variable (Male and Female); `Ethnicity` is a categorical variable and it indicates the mother's ethnicity; `Child.s.First.Name` is a categorical variable, it represents baby's first name; `Count` is quantitative and the value represents the frequency of names were collected through civil birth registration; and `Rank` represents the frequency of baby names in descending order in each year.

### Cleaning the Data

In the data cleaning phase, we imported the dataset and discovered that it does not contain any missing values. Additionally, we identified and removed duplicate rows from the initial dataset. There are some ethic groups have the similar names such as `ASIAN AND PACIFIC ISLANDER` and `ASIAN AND PACI`, `BLACK NON HISPANIC` and `BLACK NON HISP` and `WHITE NON HISPANIC` and `WHITE NON HISP`. They are the same ethic groups but with different names, so we combine them before we perform analysis regarding our interest, and finally we will use the `modified_data` to do further data analysis. `Black non-Hispanic(BNH)` refers to a person having origins in any of the black racial groups of Africa (except those of Hispanic origin); `White non-Hispanic(WNH)` means a person having origins in any of the original peoples of Europe, the Middle East, or North Africa but not in Hispanic. `Hispanic(H)` refers to a person of Cuban, Mexican, Puerto Rican, South or Central American, or other Spanish culture or origin, regardless of race, and `Aisan and Pacific Islander(API)` means a person having origins in any of the original peoples of the Far East, Southeast Asia, or the Indian Subcontinent, including, for example, Cambodia, China, India, Japan, Korea, Malaysia, Pakistan, the Philippine Islands, Thailand, and Vietnam, also includes a person having origins in any of the original peoples of Hawaii, Guam, Samoa, or other Pacific Islands. Finally, there are total 2 quantitative variables, `Year of Birth` and `Count`; 4 categorical variables, `Gender`, `Ethnicity`, `Child.s.First.Name` and `Rank`.

[Ethnic Information1](https://portal.ct.gov/-/media/DOT/documents/ddbe/RaceandEthnicIdentificationDefinitions2015pdf.pdf) [Ethnic Information2](https://research.schev.edu/info/Glossary/Black-or-African-American-Black-non-Hispanic#:~:text=Term%3A%20Black%20or%20African%20American,except%20those%20of%20Hispanic%20origin) [Ethnic Information23](https://www.census.gov/topics/population/race/about.html)

First, we display the top ten most popular first names for each gender and ethnic group using bar charts. These graphs are easily readable. The top 10 popular baby first names are displayed on the horizontal axis, and the frequency of each name is shown on the vertical axis. In relation to the bar graphs depicting various ethnic groups, we have eight charts, each representing the top 10 baby first names for both males and females across four distinct ethnic groups. While these charts make it easy to identify the most popular names within each group, comparing common names across all groups simultaneously poses a challenge. To address this, we have also created a bar graph to show the results using a combined dataset. Additionally, we aim to identify unisex namesâ€”those used for both genders.


Are the average length of names decreasing as time goes on? Are short names popular today? Next, we display a time plot to show the average length of first names recorded in the dataset from 2011 to 2019. Analyze any trends here such as the increasing or decreasing trend. Why it changes as time moves on. Short names are popular and this is a trend today. (note: analyze the average of length of first names between genders from 2011 to 2019) To calculate the length of each names, apply what we learned in the class and use dyply package to calculate the average length. Then display the time plot which the horizontal axis is time, the vertical axis is the average length of first names.


##### ----This is for Samitha....----#### 

## Methods

We use `str()` function to display the structure of the data, identify the categorical variables and quantitative variables. Use `sum()` to see any missing values in the data. We also see some repeated rows, so we used `distinct()` function to get unique rows in the raw data. To identify common names used across different ethnic groups, we used the `inner_join()` function to merge the two datasets and determine any overlapping results. What we used a lot for this project 


## Topic of Exploration

The first question we address is what the top 10 most popular first names are for each gender and ethnic group, and the results are displayed in Figure 1.1. 

```{r filter dataset by M and F}
#| echo: false

# select top 10 female's names
vf_data <- modified_data %>% 
  filter(Gender == "FEMALE") %>% 
  group_by(Child.s.First.Name, Gender) %>% 
  summarise(freq = sum (Count),  .groups = "drop") %>% 
  arrange(desc(freq)) %>% head(10)

# select top 10 male's names
vm_data <- modified_data %>% 
  filter(Gender == "MALE") %>% 
  group_by(Child.s.First.Name, Gender) %>%
  summarise(freq = sum(Count), .groups = "drop") %>% 
  arrange(desc(freq)) %>% 
  head(10)
```

Let us examine the top 10 male and female names overall.

##### Figure 1.1: Bar Graph of the Top 10 Baby First Names for Males and Females

```{r}
#| label: fig-genders1
#| fig-width: 8
#| fig-height: 4 # Change the figure dimensions using fig-width/height
#| out-width: 80% # This changes the size of the figure as rendered in the text. 
#| fig-cap: "This figure shows the top 10 first names for males and females."
#| echo: false

library(ggplot2)

vm_data$Child.s.First.Name <-factor(vm_data$Child.s.First.Name, levels = vm_data$Child.s.First.Name) 

ggplot(data=vm_data, aes(x= Child.s.First.Name, y=freq)) +
  geom_bar(stat="identity", fill = 'steelblue2') +
  theme(axis.text.x = element_text(angle =45, hjust = 1)) +
  labs(title = "Top 10 Popular Male Babies' Names", 
       subtitle = "from 2011 to 2019", 
       x = "Child's First Name", 
       y = "Count") + 
    theme_minimal()

vf_data$Child.s.First.Name <-factor(vf_data$Child.s.First.Name, levels = vf_data$Child.s.First.Name) 

ggplot(data=vf_data, aes(x= Child.s.First.Name, y=freq)) +
  geom_bar(stat="identity", fill = 'hotpink') +
  theme(axis.text.x = element_text(angle =45, hjust = 1)) +
  labs(title = "Top 10 Popular Female Babies' Names", 
       subtitle = "from 2011 to 2019", 
       x = "Child's First Name", 
       y = "Count") + 
    theme_minimal()
```

We can see the top 10 names for each gender on horizontal axis from these two bar charts, and the frequency of each name displayed on vertical axis. 

In each bar chart, we clearly display the top 10 males and females names for each ethnic group, as shown in Figures 1.2.1 to 1.2.8. These charts make it easy to read the names specific to each ethnic group within each gender. However, the question arises: how do we visualize some names shared among different ethnic groups? Are there any names that are used by both White non-Hispanic (WNH) males and Black non-Hispanic (BNH) males? Or by both White non-Hispanic (WNH) females and Black non-Hispanic (BNH) females? To address these questions, we merged datasets from two ethnic groups. We then plotted the results to highlight any such commonalities in Figures 1.3.1 to 1.3.5.

##### Figure 1.2: Bar Graph of the Top 10 Names in Different Ethnic Groups for Males and Females.

```{r filter dataset by ethnic groups}
#| echo: false

# top 10 names in ethnic group of API between Males and Females
em1_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "ASIAN AND PACIFIC ISLANDER" & Gender == "MALE") %>% group_by(Child.s.First.Name) %>% summarise(freqM_API = sum(Count), .groups = "drop") %>% arrange(desc(freqM_API)) %>% head(n=10)

ef1_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "ASIAN AND PACIFIC ISLANDER", Gender == "FEMALE") %>% group_by(Child.s.First.Name) %>% summarise(freqF_API = sum(Count)) %>% arrange(desc(freqF_API)) %>% slice_head(n=10)


# top 10 names in ethnic group of BNH between Males and Females
em2_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "BLACK NON HISPANIC", Gender == "MALE") %>% group_by(Child.s.First.Name) %>% summarise(freqM_BNH = sum(Count)) %>% arrange(desc(freqM_BNH)) %>% slice_head(n=10)

ef2_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "BLACK NON HISPANIC", Gender == "FEMALE") %>% group_by(Child.s.First.Name) %>% summarise(freqF_BNH = sum(Count)) %>% arrange(desc(freqF_BNH)) %>% slice_head(n=10)

# top 10 names in ethnic group of H between Males and Females
em3_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "HISPANIC", Gender == "MALE") %>% group_by(Child.s.First.Name) %>% summarise(freqM_H = sum(Count)) %>% arrange(desc(freqM_H)) %>% slice_head(n=10)

ef3_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "HISPANIC", Gender == "FEMALE") %>% group_by(Child.s.First.Name) %>% summarise(freqF_H = sum(Count)) %>% arrange(desc(freqF_H)) %>% slice_head(n=10)

# top 10 names in ethnic group of WNH between Males and Females
em4_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "WHITE NON HISPANIC", Gender == "MALE") %>% group_by(Child.s.First.Name) %>% summarise(freqM_WNH = sum(Count)) %>% arrange(desc(freqM_WNH)) %>% slice_head(n=10)

ef4_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "WHITE NON HISPANIC", Gender == "FEMALE") %>% group_by(Child.s.First.Name) %>% summarise(freqF_WNH = sum(Count)) %>% arrange(desc(freqF_WNH)) %>% slice_head(n=10)

```

##### Figure 1.2.1: Bar Graph of the Top 10 Males Names for Asian and Pacific Islander 

```{r}
#| label: fig-genders2
#| fig-width: 8
#| fig-height: 4 # Change the figure dimensions using fig-width/height
#| out-width: 80% # This changes the size of the figure as rendered in the text. 
#| fig-cap: "This figure shows top 10 popular Asian and Pacific Islander boys names"
#| echo: false


# display in ordered by count
em1_data$Child.s.First.Name <-factor(em1_data$Child.s.First.Name, levels = em1_data$Child.s.First.Name) 

ggplot(data = em1_data, aes(x = Child.s.First.Name, y = freqM_API)) + 
  geom_bar(stat = "identity", fill = 'lightblue') +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  labs(title = "Top 10 Asian and Pacific Islander First Names For Boys",
       x = "Name",
       y = "Count") + 
      theme_minimal()
```

##### Figure 1.2.2: Bar Graph of the Top 10 Females Names for Asian and Pacific Islander 

```{r}
#| label: fig-genders3
#| fig-width: 8
#| fig-height: 4 # Change the figure dimensions using fig-width/height
#| out-width: 80% # This changes the size of the figure as rendered in the text. 
#| fig-cap: "This figure shows top 10 popular Asian and Pacific Islander girls names"
#| echo: false


# display in ordered by count
ef1_data$Child.s.First.Name <-factor(ef1_data$Child.s.First.Name, levels = ef1_data$Child.s.First.Name) 

ggplot(data = ef1_data, aes(x = Child.s.First.Name, y = freqF_API)) + 
  geom_bar(stat = "identity", fill = 'lightpink') +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  labs(title = "Top 10  Asian and Pacific Islander First Names For Girls",
       x = "Name",
       y = "Count") + 
      theme_minimal()
```

##### Figure 1.2.3: Bar Graph of the Top 10 Males Names for Black Non-Hispanic 

```{r}
#| label: fig-genders4
#| fig-width: 8
#| fig-height: 4 # Change the figure dimensions using fig-width/height
#| out-width: 80% # This changes the size of the figure as rendered in the text. 
#| fig-cap: "This figure shows top 10 popular Black non Hispanic boys names"
#| echo: false


# display in ordered by count
em2_data$Child.s.First.Name <-factor(em2_data$Child.s.First.Name, levels = em2_data$Child.s.First.Name) 

ggplot(data = em2_data, aes(x = Child.s.First.Name, y = freqM_BNH)) + 
  geom_bar(stat = "identity", fill = 'lightblue') +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  labs(title = "Top 10 Black non Hispanic First Names For Boys",
       x = "Name",
       y = "Count") + 
      theme_minimal()
```

##### Figure 1.2.3: Bar Graph of the Top 10 Females Names for Black Non-Hispanic 

```{r}
#| label: fig-genders5
#| fig-width: 8
#| fig-height: 4 # Change the figure dimensions using fig-width/height
#| out-width: 80% # This changes the size of the figure as rendered in the text. 
#| fig-cap: "This figure shows top 10 popular Black non Hispanic girls names"
#| echo: false

# display in ordered by count
ef2_data$Child.s.First.Name <-factor(ef2_data$Child.s.First.Name, levels = ef2_data$Child.s.First.Name) 

ggplot(data = ef2_data, aes(x = Child.s.First.Name, y = freqF_BNH)) + 
  geom_bar(stat = "identity", fill = 'lightpink') +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  labs(title = "Top 10 Black non Hispanic First Names For Girls",
       x = "Name",
       y = "Count") + 
      theme_minimal()
```

##### Figure 1.2.5: Bar Graph of the Top 10 Males Names for Hispanic 

```{r}
#| label: fig-genders6
#| fig-width: 8
#| fig-height: 4 # Change the figure dimensions using fig-width/height
#| out-width: 80% # This changes the size of the figure as rendered in the text. 
#| fig-cap: "This figure shows top 10 popular Hispanic boys names"
#| echo: false


# display in ordered by count
em3_data$Child.s.First.Name <-factor(em3_data$Child.s.First.Name, levels = em3_data$Child.s.First.Name) 

ggplot(data = em3_data, aes(x = Child.s.First.Name, y = freqM_H)) + 
  geom_bar(stat = "identity", fill = 'lightblue') +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  labs(title = "Top 10 Hispanic First Names For Boys",
       x = "Name",
       y = "Count") + 
      theme_minimal()
```

##### Figure 1.2.6: Bar Graph of the Top 10 Females Names for Hispanic 

```{r}
#| label: fig-genders7
#| fig-width: 8
#| fig-height: 4 # Change the figure dimensions using fig-width/height
#| out-width: 80% # This changes the size of the figure as rendered in the text. 
#| fig-cap: "This figure shows top 10 popular Hispanic girls names"
#| echo: false


# display in ordered by count
ef3_data$Child.s.First.Name <-factor(ef3_data$Child.s.First.Name, levels = ef3_data$Child.s.First.Name) 

ggplot(data = ef3_data, aes(x = Child.s.First.Name, y = freqF_H)) + 
  geom_bar(stat = "identity", fill = 'lightpink') +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  labs(title = "Top 10 Hispanic First Names For Girls",
       x = "Name",
       y = "Count") + 
      theme_minimal()
```

##### Figure 1.2.7: Bar Graph of the Top 10 Males Names for White Non-Hispanic

```{r}
#| label: fig-genders8
#| fig-width: 8
#| fig-height: 4 # Change the figure dimensions using fig-width/height
#| out-width: 80% # This changes the size of the figure as rendered in the text. 
#| fig-cap: "This figure shows top 10 popular White Non Hispanic boys names"
#| echo: false

# display in ordered by count
em4_data$Child.s.First.Name <-factor(em4_data$Child.s.First.Name, levels = em4_data$Child.s.First.Name) 

ggplot(data = em4_data, aes(x = Child.s.First.Name, y = freqM_WNH)) + 
  geom_bar(stat = "identity", fill = 'lightblue') +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  labs(title = "Top 10 White Non Hispanic First Names For Boys",
       x = "Name",
       y = "Count") + 
      theme_minimal()
```

##### Figure 1.2.8: Bar Graph of the Top 10 Females Names for White Non-Hispanic

```{r}
#| label: fig-genders9
#| fig-width: 8
#| fig-height: 4 # Change the figure dimensions using fig-width/height
#| out-width: 80% # This changes the size of the figure as rendered in the text. 
#| fig-cap: "This figure shows top 10 White Non Hispanic girls names"
#| echo: false


# display in ordered by count
ef4_data$Child.s.First.Name <-factor(ef4_data$Child.s.First.Name, levels = ef4_data$Child.s.First.Name) 

ggplot(data = ef4_data, aes(x = Child.s.First.Name, y = freqF_WNH)) + 
  geom_bar(stat = "identity", fill = 'lightpink') +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  labs(title = "Top 10 White Non Hispanic First Names For Girls",
       x = "Name",
       y = "Count") + 
      theme_minimal()
```



```{r merge data sets for all males and females WNH and BNH 10 to 20}
#| echo: false

library(dplyr)

# develop merge of males between 2 ethnic groups
inner_M1 <- inner_join(em1_data, em3_data, by = "Child.s.First.Name")
inner_M2 <- inner_join(em2_data, em4_data, by = "Child.s.First.Name") 
inner_M2 # no common result; why? different culture

# expand dataset with top 20 names
em22_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "BLACK NON HISPANIC", Gender == "MALE") %>% group_by(Child.s.First.Name) %>% summarise(freqM_BNH = sum(Count)) %>% arrange(desc(freqM_BNH)) %>% slice_head(n=20)

em44_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "WHITE NON HISPANIC", Gender == "MALE") %>% group_by(Child.s.First.Name) %>% summarise(freqM_WNH = sum(Count)) %>% arrange(desc(freqM_WNH)) %>% slice_head(n=20)


inner_M22 <- inner_join(em22_data, em44_data, by = "Child.s.First.Name")
inner_M22 # luckily, we get common results but the culture plays an important role in names

####---------------------------------------------------------------------------------------------####

# develop merge of female between 2 ethnic groups
inner_F1 <- inner_join(ef1_data, ef3_data, by = "Child.s.First.Name")
inner_F2 <- inner_join(ef2_data, ef4_data, by = "Child.s.First.Name")
inner_F2 # only one common names

ef22_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "BLACK NON HISPANIC", Gender == "FEMALE") %>% group_by(Child.s.First.Name) %>% summarise(freqF_BNH = sum(Count)) %>% arrange(desc(freqF_BNH)) %>% slice_head(n=20)

ef44_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "WHITE NON HISPANIC", Gender == "FEMALE") %>% group_by(Child.s.First.Name) %>% summarise(freqF_WNH = sum(Count)) %>% arrange(desc(freqF_WNH)) %>% slice_head(n=20)

inner_F22 <- inner_join(ef22_data, ef44_data, by = "Child.s.First.Name")
inner_F22 # Again, cultures difference 

####-----------------------------------------------------------------------####
```


```{r merge data sets for all males and females WNH and BNH 50}
#| echo: false

# expand dataset with top 50 names
em50_BNH_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "BLACK NON HISPANIC", Gender == "MALE") %>% group_by(Child.s.First.Name) %>% summarise(freqM_BNH = sum(Count)) %>% arrange(desc(freqM_BNH)) %>% slice_head(n=50)

em50_WNP_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "WHITE NON HISPANIC", Gender == "MALE") %>% group_by(Child.s.First.Name) %>% summarise(freqM_WNH = sum(Count)) %>% arrange(desc(freqM_WNH)) %>% slice_head(n=50)


inner_M50 <- inner_join(em50_BNH_data, em50_WNP_data, by = "Child.s.First.Name")
inner_M50 # more common names but not too much

####---------------------------------------------------------------------------------------------####


ef50_BNH_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "BLACK NON HISPANIC", Gender == "FEMALE") %>% group_by(Child.s.First.Name) %>% summarise(freqF_BNH = sum(Count)) %>% arrange(desc(freqF_BNH)) %>% slice_head(n=50)

ef50_WNH_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "WHITE NON HISPANIC", Gender == "FEMALE") %>% group_by(Child.s.First.Name) %>% summarise(freqF_WNH = sum(Count)) %>% arrange(desc(freqF_WNH)) %>% slice_head(n=50)

inner_F50 <- inner_join(ef50_BNH_data, ef50_WNH_data, by = "Child.s.First.Name")
inner_F50 # Again, cultures difference 

####-----------------------------------------------------------------------####
```

After merging the datasets of White non-Hispanic (WNH) and Black non-Hispanic (BNH) for the top 10 names among males and females, we found no common names among the males and only one common name, `Olivia`, among females. When we expanded the list to the top 20 names, we discovered three common names for boys and four for girls used across both ethnic groups. Although extending the range of names revealed more commonalities, the frequency of each name varied significantly between the groups. To illustrate this, we plotted a side-by-side bar chart showing the frequency of names between WNH and BNH. Our primary aim is to convey that different ethnic groups tend to use different names, largely influenced by cultural differences. The results are displayed from Figure 1.3.1 to Figure 1.3.3.


##### Figure 1.3.1: Side-by-Side Bar Graph of Common Names Among the Top 20 for WNH and BNH Males.

```{r}
#| label: fig-ethnic2
#| fig-width: 8
#| fig-height: 4 
#| out-width: 80%  
#| fig-cap: "This figure shows common names for Black non-Hispanic and White non-Hispanic (MALES) top 20"
#| echo: false

library(reshape2)
melt_M22 <- melt(inner_M22, id.vars = 'Child.s.First.Name')
melt_M22$variable <- as.character(melt_M22$variable )
melt_M22$variable <- gsub('freqM_BNH', 'Black non-Hispanic - Male', melt_M22$variable)
melt_M22$variable <- gsub('freqM_WNH', 'White non-Hispanic - Male', melt_M22$variable)

ggplot(data = melt_M22, aes(x = Child.s.First.Name, y = value, fill = variable)) + 
  geom_bar(stat = "identity", position = position_dodge()) +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  
  labs(title = "Common Males Frist Name Between Black non-Hispanic and White non-Hispanic",
        subtitle = "within top 20", 
       x = "Name",
       y = "Frequency",
       fill = "Ethnic Group")+
  theme_minimal()

```

##### Figure 1.3.2: Side-by-Side Bar Graph of Common Names Among the Top 10 for WNH and BNH Females

```{r}
#| label: fig-ethnic4
#| fig-width: 8
#| fig-height: 4 
#| out-width: 80%  
#| fig-cap: "This figure shows common names for Black non-Hispanic and White non-Hispanic (FEMALES)" 
#| echo: false


melt_F2 <- melt(inner_F2, id.vars = 'Child.s.First.Name')
melt_F2$variable <- as.character(melt_F2$variable )
melt_F2$variable <- gsub('freqF_BNH', 'Black non-Hispanic - Female', melt_F2$variable)
melt_F2$variable <- gsub('freqF_WNH', 'White non-Hispanic - Female', melt_F2$variable)

ggplot(data = melt_F2, aes(x = Child.s.First.Name, y = value, fill = variable)) + 
  geom_bar(stat = "identity", position = position_dodge()) +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  
  labs(title = "Common Females Frist Name Between Black non-Hispanic and White non-Hispanic",
        subtitle = "within top 10", 
       x = "Name",
       y = "Frequency",
       fill = "Ethnic Group")+
  theme_minimal()

```

##### Figure 1.3.3: Side-by-Side Bar Graph of Common Names Among the Top 20 for WNH and BNH Females

```{r}
#| label: fig-ethnic5
#| fig-width: 8
#| fig-height: 4 
#| out-width: 80%  
#| fig-cap: "This figure shows common names for Black non-Hispanic and White non-Hispanic (FEMALES) top 20"
#| echo: false


melt_F22 <- melt(inner_F22, id.vars = 'Child.s.First.Name')
melt_F22$variable <- as.character(melt_F22$variable )
melt_F22$variable <- gsub('freqF_BNH', 'Black non-Hispanic - Female', melt_F22$variable)
melt_F22$variable <- gsub('freqF_WNH', 'White non-Hispanic - Female', melt_F22$variable)

ggplot(data = melt_F22, aes(x = Child.s.First.Name, y = value, fill = variable)) + 
  geom_bar(stat = "identity", position = position_dodge()) +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  
  labs(title = "Common Females Frist Name Between Black non-Hispanic and White non-Hispanic",
        subtitle = "within top 20", 
       x = "Name",
       y = "Frequency",
       fill = "Ethnic Group")+
  theme_minimal()

```

##### Figure 1.3.4:  Side-by-Side Bar Graph of Common Names Among the Top 10 for API and H Males

```{r}
#| label: fig-ethnic1
#| fig-width: 8
#| fig-height: 4 
#| out-width: 80%  
#| fig-cap: "This figure shows common names for Asian Pacific Islander and Hispanic (MALES)"
#| echo: false

library(reshape2)
melt_M1 <- melt(inner_M1, id.vars = 'Child.s.First.Name')
melt_M1$variable <- as.character(melt_M1$variable )
melt_M1$variable <- gsub('freqM_API', 'Asian Pacific Islander - Male', melt_M1$variable)
melt_M1$variable <- gsub('freqM_H', 'Hispanic - Male', melt_M1$variable)

ggplot(data = melt_M1, aes(x = Child.s.First.Name, y = value, fill = variable)) + 
  geom_bar(stat = "identity", position = position_dodge()) +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  
  labs(title = "Common Males Frist Name Between Asian Pacific Islander and Hispanic",
        subtitle = "within top 10", 
       x = "Name",
       y = "Frequency",
       fill = "Ethnic Group")+
  theme_minimal()

```

##### Figure 1.3.5:  Side-by-Side Bar Graph of Common Names Among the Top 10 for API and H Females

```{r}
#| label: fig-ethnic3
#| fig-width: 8
#| fig-height: 4 
#| out-width: 80%  
#| fig-cap: "This figure shows common names for Asian Pacific Islander and Hispanic (FEMALES)"
#| echo: false


inner_F1 <- melt(inner_F1, id.vars = 'Child.s.First.Name')
inner_F1$variable <- as.character(inner_F1$variable )
inner_F1$variable <- gsub('freqF_API', 'Asian Pacific Islander - Female', inner_F1$variable)
inner_F1$variable <- gsub('freqF_H', 'Hispanic - Female', inner_F1$variable)

ggplot(data = inner_F1, aes(x = Child.s.First.Name, y = value, fill = variable)) + 
  geom_bar(stat = "identity", position = position_dodge()) +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  
  labs(title = "Common Female Frist Name Between Asian Pacific Islander and Hispanic",
        subtitle = "within top 10", 
       x = "Name",
       y = "Frequency",
       fill = "Ethnic Group") +
  theme_minimal()
```



```{r Develop Unisex Name: merge males and females within the same ethnic groups}
#| echo: false

## Develop Unisex Name: merge males and females within the same ethnic groups 
em1_100_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "ASIAN AND PACIFIC ISLANDER" & Gender == "MALE") %>% group_by(Child.s.First.Name) %>% summarise(freqM_API = sum(Count), .groups = "drop") %>% arrange(desc(freqM_API)) %>% head(n=1000)

ef1_100_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "ASIAN AND PACIFIC ISLANDER", Gender == "FEMALE") %>% group_by(Child.s.First.Name) %>% summarise(freqF_API = sum(Count)) %>% arrange(desc(freqF_API)) %>% slice_head(n=1000)

inner_com1 <- inner_join(em1_100_data, ef1_100_data, by = "Child.s.First.Name")
# found 4 unisex names


em2_100_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "BLACK NON HISPANIC", Gender == "MALE") %>% group_by(Child.s.First.Name) %>% summarise(freqM_BNH = sum(Count)) %>% arrange(desc(freqM_BNH)) %>% slice_head(n=1000)

ef2_100_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "BLACK NON HISPANIC", Gender == "FEMALE") %>% group_by(Child.s.First.Name) %>% summarise(freqF_BNH = sum(Count)) %>% arrange(desc(freqF_BNH)) %>% slice_head(n=1000)

inner_com2 <- inner_join(em2_100_data, ef2_100_data, by = "Child.s.First.Name")
# no result

### selected 1000 to see whether there is unisex name; check M_data2 to each # of each gender or ethnic group
em3_100_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "HISPANIC", Gender == "MALE") %>% group_by(Child.s.First.Name) %>% summarise(freqM_H = sum(Count)) %>% arrange(desc(freqM_H)) %>% slice_head(n=1000)

ef3_100_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "HISPANIC", Gender == "FEMALE") %>% group_by(Child.s.First.Name) %>% summarise(freqF_H = sum(Count)) %>% arrange(desc(freqF_H)) %>% slice_head(n=1000)

inner_com3 <- inner_join(em3_100_data, ef3_100_data, by = "Child.s.First.Name")


em4_100_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "WHITE NON HISPANIC", Gender == "MALE") %>% group_by(Child.s.First.Name) %>% summarise(freqM_WNH = sum(Count)) %>% arrange(desc(freqM_WNH)) %>% slice_head(n=1000)

ef4_100_data <- modified_data %>% select('Ethnicity', 'Gender' , 'Child.s.First.Name', 'Count') %>% filter(Ethnicity == "WHITE NON HISPANIC", Gender == "FEMALE") %>% group_by(Child.s.First.Name) %>% summarise(freqF_WNH = sum(Count)) %>% arrange(desc(freqF_WNH)) %>% slice_head(n=1000)

inner_com4 <- inner_join(em4_100_data, ef4_100_data, by = "Child.s.First.Name")

# Females Names
VF_data <- modified_data %>% 
  filter(Gender == "FEMALE") %>% 
  group_by(Child.s.First.Name, Gender) %>% 
  summarise(freq = sum (Count),  .groups = "drop") %>% 
  arrange(desc(freq))

# Males Names
VM_data <- modified_data %>% 
  filter(Gender == "MALE") %>% 
  group_by(Child.s.First.Name, Gender) %>%
  summarise(freq = sum(Count), .groups = "drop") %>% 
  arrange(desc(freq))

inner_COM <- inner_join(VF_data, VM_data, by = "Child.s.First.Name") %>% head(10)

###----------------------------------------------------------------------###

library(tidyr)
df_long <- pivot_longer(inner_COM, 
                        cols = c(freq.x, freq.y), 
                        names_to = "Gender", 
                        values_to = "Frequency",
                        names_prefix = "freq.")
df_long$Gender <- recode(df_long$Gender, 'x' = 'FEMALE', 'y' = 'MALE')
```

##### Figure 1.3.6:  Side-by-Side Bar Graph of Unisex Names

```{r}
#| label: fig-combined
#| fig-width: 8
#| fig-height: 4 
#| out-width: 80%  
#| fig-cap: "This figure shows unisex names are used by both genders"
#| echo: false


ggplot(data = df_long, aes(x = Child.s.First.Name, y = Frequency, fill = Gender)) + 
  geom_bar(stat = "identity", position = position_dodge()) +  
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  
  labs(title = "Unisex Names Frenquency by Gender",
       x = "Name",
       y = "Frequency",
       fill = "Gender")+
  theme_minimal()
```

What we are suprised that `Dylan` is very popular no matter for males or females. Dylan is popular because it means "son of the sea", and retains more of its poetic, windswept quality when used for girls. [Dylan](https://nameberry.com/babyname/dylan/girl) Besides, `Avery` is more common for girls but is traditionally a boy's name, which mean rule of the elves in English. [Avery](https://nameberry.com/babyname/avery/girl) We also found `Tenzin` is used only in API, but it is for both males and females. "The name Tenzin is both a boy's name and a girl's name meaning"Holder of the teaching". Tenzin (sometimes also written as Tenzing or Stanzin)", found on the website. In API ethnic groups, the religious factor is the main reason that the names is used for both genders. [Tenzin](https://nameberry.com/babyname/tenzin/girl) Overall, people used unisex names mainly because the meaning of the names, but the religious and cultures can also be taken into account.

#### Time Plot of Average Length of First Names by Gender

```{r calculate average length of letters for names}
#| echo: false

library(stringr)
# calculate the length of letter of each name
length_data <- modified_data %>% mutate(N.Length = str_count(Child.s.First.Name, "[A-Za-z]")) %>% mutate(T.length = Count * N.Length) 
# calculate the average number of letters in each year for males and females
avglength_data <- length_data  %>% group_by(Year.of.Birth, Gender) %>% 
  summarise(Avg.Letters = mean(N.Length, na.rm = TRUE), .groups = "drop") %>% 
  arrange(Year.of.Birth, Gender)
# calculate the average number of letters in each year for each ethnic groups
avglength_data_ethnic <- length_data  %>% group_by(Year.of.Birth, Ethnicity) %>% 
  summarise(Avg.Letters = mean(N.Length, na.rm = TRUE), .groups = "drop") %>% 
  arrange(Year.of.Birth, Ethnicity)

```

#####Time Plot 1.1 Average Length of First Names For Male and Female

```{r}
#| label: fig-AverageLength1
#| fig-width: 8
#| fig-height: 4 
#| out-width: 80%  
#| fig-cap: "This figure shows average length of babies' first name for female and male from 2011 to 2019"
#| echo: false


ggplot(data = avglength_data, aes(x = Year.of.Birth, y = Avg.Letters, color = Gender, group = Gender)) + 
  geom_line() +
  geom_point() +
  scale_x_continuous(breaks = seq(2011, 2019, by=1), limits = c(2011, 2019)) +
  labs(title = "Average Number of Letters in Babies' Name by Gender", 
       subtitle = "from 2011 to 2019", 
       x = "Year", 
       y = "Average Number of Letters") + 
    theme_minimal()
```

#####Time Plot 1.2 Average Length of First Names For Different Ethnic Groups

```{r}
#| label: fig-AverageLength2
#| fig-width: 8
#| fig-height: 4 
#| out-width: 80%  
#| fig-cap: "This figure shows average length of babies' first name for different ethnic groups from 2011 to 2019"
#| echo: false


ggplot(data = avglength_data_ethnic, aes(x = Year.of.Birth, y = Avg.Letters, color = Ethnicity, group = Ethnicity)) + 
  geom_line() +
  geom_point() +
  scale_x_continuous(breaks = seq(2011, 2019, by=1), limits = c(2011, 2019)) +
  labs(title = "Average Number of Letters in Babies' Name by Ethnicity", 
       subtitle = "from 2011 to 2019", 
       x = "Year", 
       y = "Average Number of Letters") + 
    theme_minimal()
```

From the time plot of average length of letters for babies first names, we can see, overall, the average length of names decreases over the time. The main reason is trend. Today, more people prefer short name because it make easier for people to remember and short name can also make it unique. When we search for other reasons make short names popular, Katie pointed short names and higher salary. [Popularity](https://daily.jstor.org/science-baby-names/) [Shorter Name Higher Salary](https://associationsnow.com/2013/05/study-short-names-are-long-on-earning-power/) [Study Says Shorter Names Earn More](https://www.forbes.com/sites/laurashin/2013/05/07/study-says-shorter-names-earn-more/?sh=443c788972ea)

#### THIS IS ORIGINAL CODING FROM qmd. FILE

The `echo: false` option disables the printing of code (only output is displayed). If you generate a figure, it should have a caption. Here's a demonstration of how to do that:

Then, you can reference @fig-iris in the text and the appropriate cross-reference will be generated.

You can find additional information about formatting figures generated from code in the [quarto documentation](https://quarto.org/docs/authoring/figures.html#computations).

## Additional Exploration topic

In the time plot, the average length for males names is less than females. Why? Shorter names is attractive?

In the merged dataset, why the unisex names are used in WNH?

It might be interesting to look at different spellings of similar names (e.g. Keily, Kylee, Kylie), if you get a chance and want to challenge yourselves. I'm not sure if you can get all sets of similar spellings automatically (maybe with some sort of phonetic guide or data read in from elsewhere, but that would be a bit complicated) but you could just look at a few common variations that pop up from your EDA.

`Add another topic here... as many as you desire, really. Make sure to include a transition between the two sections that connects the two with some sort of logical train of thought.`

## Conclusion

## Tips

(delete this section from your report!)

Almost anything you might want to know about how to format output in quarto can be found [here](https://quarto.org/docs/authoring/markdown-basics.html). Feel free to email/come to office hours to figure out how to do XYZ - part of the goal of making you write this report is that I want you to know how to write e.g. a journal paper in Quarto as well, so now's the time to experiment.

If you want to know what the wordcount of your report is, you can run the following command in your terminal:

```         
pandoc --lua-filter wordcount.lua report.qmd
```

Notice that I have not pushed `_output/report.html` or the `_output/report_files/` folder to github - this is intentional. I have actually set `_output` to not show up in git, to encourage you all to NOT push the rendered files to github and to instead work from the markdown files directly.

You may find it cleaner to create a figure subdirectory and store any figures that aren't created by R/Python in that folder. I encourage you to organize this repository in a sensible way.
